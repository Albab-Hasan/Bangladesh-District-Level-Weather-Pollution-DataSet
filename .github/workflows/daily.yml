name: Daily dataset collection and Kaggle publish

on:
  schedule:
    # Runs daily at 06:00 UTC = 12:00 Asia/Dhaka (noon)
    - cron: '0 6 * * *'
  workflow_dispatch: {}

jobs:
  collect-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt kaggle

      - name: Run daily collector
        env:
          OWM_API_KEY: ${{ secrets.OWM_API_KEY }}
        run: |
          python scripts/collect_daily.py

      - name: Commit and push data changes
        run: |
          git config user.email "actions@github.com"
          git config user.name "github-actions"
          git add data/raw data/master.csv data/districts_geocoded.csv cache/geocode_cache.json || true
          if ! git diff --cached --quiet; then
            git commit -m "Daily dataset update: $(date -u +%Y-%m-%d)"
            git push
          fi

      - name: Prepare Kaggle package
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
        run: |
          mkdir -p kaggle_pkg
          cp kaggle/dataset-metadata.json kaggle_pkg/dataset-metadata.json
          sed -i "s/USERNAME_PLACEHOLDER/${KAGGLE_USERNAME}/" kaggle_pkg/dataset-metadata.json
          cp README.md kaggle_pkg/README.md
          cp data/master.csv kaggle_pkg/master.csv

      - name: Configure Kaggle credentials
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
        run: |
          mkdir -p ~/.kaggle
          echo "{\"username\":\"${KAGGLE_USERNAME}\",\"key\":\"${KAGGLE_KEY}\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Create or version Kaggle dataset
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
        run: |
          set -e
          DATASET_ID="${KAGGLE_USERNAME}/bangladesh-district-weather-airquality-daily"
          if kaggle datasets status -d "$DATASET_ID" > /dev/null 2>&1; then
            kaggle datasets version -p kaggle_pkg -m "Daily update $(date -u +%Y-%m-%d)" -r csv
          else
            kaggle datasets create -p kaggle_pkg -r csv
          fi


